//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BusinessID", Namespace = "http://schemas.datacontract.org/2004/07/Tesco.Com.Framework.ApplicationContext")]
    public enum BusinessID : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grocery = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wine = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Direct = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllBusiness = 4,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ChannelID", Namespace = "http://schemas.datacontract.org/2004/07/Tesco.Com.Framework.ApplicationContext")]
    public enum ChannelID : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllChannels = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByPhone = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        InStoreAssistedWeb = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        InStoreAssistedStocked = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerService = 5,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "MyAccountCustomerService.ICustomerSvcsCoreSDA")]
    public interface ICustomerSvcsCoreSDA
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/AddClubcardPoints", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/AddClubcardPointsResponse")]
        void AddClubcardPoints(string temporaryClubcardNumber, long webCustomerID, string orderNumber, int clubcardPoints, int greenClubcardPoints, int applicationID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerTargetSegmentDelete", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerTargetSegmentDeleteResponse")]
        void CustomerTargetSegmentDelete(long webCustomerID, string segmentCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteAddressResponse")]
        void DeleteAddress(int addressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteCustomer", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteCustomerResponse")]
        void DeleteCustomer(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteTemporaryClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteTemporaryClubcardResponse")]
        void DeleteTemporaryClubcard(long webCustomerID, string temporaryClubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteRegisteredCustomerByEmail", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/DeleteRegisteredCustomerByEmailResponse")]
        void DeleteRegisteredCustomerByEmail(string email);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/SetBillingAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/SetBillingAddressResponse")]
        void SetBillingAddress(int addressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/SetDefaultClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/SetDefaultClubcardResponse")]
        void SetDefaultClubcard(long webCustomerID, string clubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/SetHomeAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/SetHomeAddressResponse")]
        void SetHomeAddress(int addressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateAddressResponse")]
        void UpdateAddress(
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business,
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel,
                    int addressID,
                    string nickName,
                    string buildingNameNumber,
                    string subBuildingNumber,
                    string streetName,
                    string postalTown,
                    string postcode,
                    System.Nullable<int> buildingTypeID,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string legacyAddressString,
                    System.Nullable<bool> deliveryWithoutBags,
                    string deliveryInstructions,
                    System.Nullable<bool> isBillingAddress,
                    System.Nullable<bool> isHomeAddress,
                    System.Nullable<bool> isPAFValidated,
                    string locality,
                    string organisationName,
                    string gridRef);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateAddressTelephoneNumbers", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateAddressTelephoneNumbersResponse")]
        void UpdateAddressTelephoneNumbers(string phoneMobile, string phoneEvening, string phoneDay, int addressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateClubcardResponse")]
        void UpdateClubcard(long webCustomerID, string clubcardNumber, string clubcardPostcode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateEmailAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateEmailAddressResponse")]
        void UpdateEmailAddress(long webCustomerID, string emailAddress);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdatePersonalDetails", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdatePersonalDetailsResponse")]
        void UpdatePersonalDetails(string clubcardNumber, string emailAddress, string Forename, string initials, bool isStaffMember, string surname, string title, string clubcardPostcode, long webCustomerID, string displayName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateCreditedPendingClubcardPoints", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateCreditedPendingClubcardPointsRespon" +
            "se")]
        void UpdateCreditedPendingClubcardPoints(string temporaryClubcardNumber, string creditedClubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateLegacyPassword", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateLegacyPasswordResponse")]
        void UpdateLegacyPassword(string email, string oldPassword, string newPassword);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateBagOption", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/UpdateBagOptionResponse")]
        void UpdateBagOption(long webCustomerId, System.Nullable<bool> baglessDelivery, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerEmailExists", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerEmailExistsResponse")]
        bool CustomerEmailExists(string emailAddress);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerTargetSegmentCreate", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerTargetSegmentCreateResponse")]
        void CustomerTargetSegmentCreate(long webCustomerID, string segmentCode);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetAddressDetails", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetAddressDetailsResponse")]
        string GetAddressDetails(int addreddID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetAddresses", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetAddressesResponse")]
        string GetAddresses(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetBillingAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetBillingAddressResponse")]
        string GetBillingAddress(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetBuildingTypes", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetBuildingTypesResponse")]
        string GetBuildingTypes();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetClubcardResponse")]
        string GetClubcard(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerClubcards", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerClubcardsResponse")]
        string GetCustomerClubcards(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerTargetingSegments", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerTargetingSegmentsResponse")]
        string GetCustomerTargetingSegments(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetMTSCustomerTargetingSegment", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetMTSCustomerTargetingSegmentResponse")]
        string GetMTSCustomerTargetingSegment(int dxshCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetEmailAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetEmailAddressResponse")]
        string GetEmailAddress(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetHomeAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetHomeAddressResponse")]
        string GetHomeAddress(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetNextLegacyCustomerID", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetNextLegacyCustomerIDResponse")]
        int GetNextLegacyCustomerID();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyCustomerID", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyCustomerIDResponse")]
        int GetLegacyCustomerID(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPersonalDetails", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPersonalDetailsResponse")]
        string GetPersonalDetails(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPreviousEmailAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPreviousEmailAddressResponse")]
        string GetPreviousEmailAddress(long webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/IsBillingOrHomeAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/IsBillingOrHomeAddressResponse")]
        bool IsBillingOrHomeAddress(int addressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerSearch", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerSearchResponse")]
        string GetCustomerSearch(string surname, string postCode, string clubcardNumber, string emailAddress, System.Nullable<long> webCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateAddressNickName", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateAddressNickNameResponse")]
        bool ValidateAddressNickName(long webCustomerID, string addressNickName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateClubcardResponse")]
        bool ValidateClubcard(string clubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateCustomerClubcard", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/ValidateCustomerClubcardResponse")]
        bool ValidateCustomerClubcard(long webCustomerID, string clubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPendingClubcardPoints", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetPendingClubcardPointsResponse")]
        string GetPendingClubcardPoints(string temporaryClubcardNumber);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyCustomer", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyCustomerResponse")]
        string GetLegacyCustomer(string email, System.Nullable<int> dxsCustomerId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerLegacyMigrate", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetCustomerLegacyMigrateResponse")]
        string GetCustomerLegacyMigrate(string email);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerMartiniIDGet", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CustomerMartiniIDGetResponse")]
        long CustomerMartiniIDGet(int dxshCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/IsHomeAddressBlocked", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/IsHomeAddressBlockedResponse")]
        bool IsHomeAddressBlocked(long webCustomerID, bool isHomeAddressChanged);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetMartiniCustomerDetails", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetMartiniCustomerDetailsResponse")]
        string GetMartiniCustomerDetails(int DXSHCustomerID, int DXSHAddressID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyPassword", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/GetLegacyPasswordResponse")]
        string GetLegacyPassword(string email);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateAddress", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateAddressResponse")]
        int CreateAddress(
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business,
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel,
                    long webCustomerID,
                    string nickName,
                    string buildingNameNumber,
                    string subBuildingNumber,
                    string streetName,
                    string postalTown,
                    string postcode,
                    System.Nullable<int> buildingTypeID,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string legacyAddressString,
                    System.Nullable<bool> deliveryWithoutBags,
                    string deliveryInstructions,
                    System.Nullable<bool> isBillingAddress,
                    System.Nullable<bool> isHomeAddress,
                    System.Nullable<bool> isPAFValidated,
                    int addressID,
                    string locality,
                    string organisationName,
                    string gridRef,
                    bool legacyIsBusinessAddr,
                    bool isBlockedAddress);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateCustomer", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateCustomerResponse")]
        void CreateCustomer(string clubcardNumber, string emailAddress, string Forename, string initials, bool isStaffMember, string surname, string title, string displayName, string clubcardPostcode, long webCustomerID, string password, System.Nullable<int> legacyCustomerID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateAddressInLegacy", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/CreateAddressInLegacyResponse")]
        int CreateAddressInLegacy(
                    int legacyCustomerID,
                    string serviceNo,
                    int branchID,
                    string ULCode,
                    string postcode,
                    string addressLine1,
                    string addressLine2,
                    string addressLine3,
                    string addressLine4,
                    string addressLine5,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string homeIndicator,
                    string deliveryIndicator,
                    string favouriteIndicator,
                    string gridref,
                    string deliveryInstructions,
                    string addressNickName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICustomerSvcsCoreSDA/AddToPendingClubcardPoints", ReplyAction = "http://tempuri.org/ICustomerSvcsCoreSDA/AddToPendingClubcardPointsResponse")]
        void AddToPendingClubcardPoints(string temporaryClubcardNumber, long webCustomerID, string orderNumber, int clubcardPoints, int greenClubcardPoints);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerSvcsCoreSDAChannel : Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ICustomerSvcsCoreSDA, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerSvcsCoreSDAClient : System.ServiceModel.ClientBase<Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ICustomerSvcsCoreSDA>, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ICustomerSvcsCoreSDA
    {

        public CustomerSvcsCoreSDAClient()
        {
        }

        public CustomerSvcsCoreSDAClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public CustomerSvcsCoreSDAClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public CustomerSvcsCoreSDAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public CustomerSvcsCoreSDAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public void AddClubcardPoints(string temporaryClubcardNumber, long webCustomerID, string orderNumber, int clubcardPoints, int greenClubcardPoints, int applicationID)
        {
            base.Channel.AddClubcardPoints(temporaryClubcardNumber, webCustomerID, orderNumber, clubcardPoints, greenClubcardPoints, applicationID);
        }

        public void CustomerTargetSegmentDelete(long webCustomerID, string segmentCode)
        {
            base.Channel.CustomerTargetSegmentDelete(webCustomerID, segmentCode);
        }

        public void DeleteAddress(int addressID)
        {
            base.Channel.DeleteAddress(addressID);
        }

        public void DeleteCustomer(long webCustomerID)
        {
            base.Channel.DeleteCustomer(webCustomerID);
        }

        public void DeleteTemporaryClubcard(long webCustomerID, string temporaryClubcardNumber)
        {
            base.Channel.DeleteTemporaryClubcard(webCustomerID, temporaryClubcardNumber);
        }

        public void DeleteRegisteredCustomerByEmail(string email)
        {
            base.Channel.DeleteRegisteredCustomerByEmail(email);
        }

        public void SetBillingAddress(int addressID)
        {
            base.Channel.SetBillingAddress(addressID);
        }

        public void SetDefaultClubcard(long webCustomerID, string clubcardNumber)
        {
            base.Channel.SetDefaultClubcard(webCustomerID, clubcardNumber);
        }

        public void SetHomeAddress(int addressID)
        {
            base.Channel.SetHomeAddress(addressID);
        }

        public void UpdateAddress(
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business,
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel,
                    int addressID,
                    string nickName,
                    string buildingNameNumber,
                    string subBuildingNumber,
                    string streetName,
                    string postalTown,
                    string postcode,
                    System.Nullable<int> buildingTypeID,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string legacyAddressString,
                    System.Nullable<bool> deliveryWithoutBags,
                    string deliveryInstructions,
                    System.Nullable<bool> isBillingAddress,
                    System.Nullable<bool> isHomeAddress,
                    System.Nullable<bool> isPAFValidated,
                    string locality,
                    string organisationName,
                    string gridRef)
        {
            base.Channel.UpdateAddress(business, channel, addressID, nickName, buildingNameNumber, subBuildingNumber, streetName, postalTown, postcode, buildingTypeID, phoneDay, phoneEvening, phoneMobile, legacyAddressString, deliveryWithoutBags, deliveryInstructions, isBillingAddress, isHomeAddress, isPAFValidated, locality, organisationName, gridRef);
        }

        public void UpdateAddressTelephoneNumbers(string phoneMobile, string phoneEvening, string phoneDay, int addressID)
        {
            base.Channel.UpdateAddressTelephoneNumbers(phoneMobile, phoneEvening, phoneDay, addressID);
        }

        public void UpdateClubcard(long webCustomerID, string clubcardNumber, string clubcardPostcode)
        {
            base.Channel.UpdateClubcard(webCustomerID, clubcardNumber, clubcardPostcode);
        }

        public void UpdateEmailAddress(long webCustomerID, string emailAddress)
        {
            base.Channel.UpdateEmailAddress(webCustomerID, emailAddress);
        }

        public void UpdatePersonalDetails(string clubcardNumber, string emailAddress, string Forename, string initials, bool isStaffMember, string surname, string title, string clubcardPostcode, long webCustomerID, string displayName)
        {
            base.Channel.UpdatePersonalDetails(clubcardNumber, emailAddress, Forename, initials, isStaffMember, surname, title, clubcardPostcode, webCustomerID, displayName);
        }

        public void UpdateCreditedPendingClubcardPoints(string temporaryClubcardNumber, string creditedClubcardNumber)
        {
            base.Channel.UpdateCreditedPendingClubcardPoints(temporaryClubcardNumber, creditedClubcardNumber);
        }

        public void UpdateLegacyPassword(string email, string oldPassword, string newPassword)
        {
            base.Channel.UpdateLegacyPassword(email, oldPassword, newPassword);
        }

        public void UpdateBagOption(long webCustomerId, System.Nullable<bool> baglessDelivery, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel)
        {
            base.Channel.UpdateBagOption(webCustomerId, baglessDelivery, business, channel);
        }

        public bool CustomerEmailExists(string emailAddress)
        {
            return base.Channel.CustomerEmailExists(emailAddress);
        }

        public void CustomerTargetSegmentCreate(long webCustomerID, string segmentCode)
        {
            base.Channel.CustomerTargetSegmentCreate(webCustomerID, segmentCode);
        }

        public string GetAddressDetails(int addreddID)
        {
            return base.Channel.GetAddressDetails(addreddID);
        }

        public string GetAddresses(long webCustomerID)
        {
            return base.Channel.GetAddresses(webCustomerID);
        }

        public string GetBillingAddress(long webCustomerID)
        {
            return base.Channel.GetBillingAddress(webCustomerID);
        }

        public string GetBuildingTypes()
        {
            return base.Channel.GetBuildingTypes();
        }

        public string GetClubcard(long webCustomerID)
        {
            return base.Channel.GetClubcard(webCustomerID);
        }

        public string GetCustomerClubcards(long webCustomerID)
        {
            return base.Channel.GetCustomerClubcards(webCustomerID);
        }

        public string GetCustomerTargetingSegments(long webCustomerID)
        {
            return base.Channel.GetCustomerTargetingSegments(webCustomerID);
        }

        public string GetMTSCustomerTargetingSegment(int dxshCustomerID)
        {
            return base.Channel.GetMTSCustomerTargetingSegment(dxshCustomerID);
        }

        public string GetEmailAddress(long webCustomerID)
        {
            return base.Channel.GetEmailAddress(webCustomerID);
        }

        public string GetHomeAddress(long webCustomerID)
        {
            return base.Channel.GetHomeAddress(webCustomerID);
        }

        public int GetNextLegacyCustomerID()
        {
            return base.Channel.GetNextLegacyCustomerID();
        }

        public int GetLegacyCustomerID(long webCustomerID)
        {
            return base.Channel.GetLegacyCustomerID(webCustomerID);
        }

        public string GetPersonalDetails(long webCustomerID)
        {
            return base.Channel.GetPersonalDetails(webCustomerID);
        }

        public string GetPreviousEmailAddress(long webCustomerID)
        {
            return base.Channel.GetPreviousEmailAddress(webCustomerID);
        }

        public bool IsBillingOrHomeAddress(int addressID)
        {
            return base.Channel.IsBillingOrHomeAddress(addressID);
        }

        public string GetCustomerSearch(string surname, string postCode, string clubcardNumber, string emailAddress, System.Nullable<long> webCustomerID)
        {
            return base.Channel.GetCustomerSearch(surname, postCode, clubcardNumber, emailAddress, webCustomerID);
        }

        public bool ValidateAddressNickName(long webCustomerID, string addressNickName)
        {
            return base.Channel.ValidateAddressNickName(webCustomerID, addressNickName);
        }

        public bool ValidateClubcard(string clubcardNumber)
        {
            return base.Channel.ValidateClubcard(clubcardNumber);
        }

        public bool ValidateCustomerClubcard(long webCustomerID, string clubcardNumber)
        {
            return base.Channel.ValidateCustomerClubcard(webCustomerID, clubcardNumber);
        }

        public string GetPendingClubcardPoints(string temporaryClubcardNumber)
        {
            return base.Channel.GetPendingClubcardPoints(temporaryClubcardNumber);
        }

        public string GetLegacyCustomer(string email, System.Nullable<int> dxsCustomerId)
        {
            return base.Channel.GetLegacyCustomer(email, dxsCustomerId);
        }

        public string GetCustomerLegacyMigrate(string email)
        {
            return base.Channel.GetCustomerLegacyMigrate(email);
        }

        public long CustomerMartiniIDGet(int dxshCustomerID)
        {
            return base.Channel.CustomerMartiniIDGet(dxshCustomerID);
        }

        public bool IsHomeAddressBlocked(long webCustomerID, bool isHomeAddressChanged)
        {
            return base.Channel.IsHomeAddressBlocked(webCustomerID, isHomeAddressChanged);
        }

        public string GetMartiniCustomerDetails(int DXSHCustomerID, int DXSHAddressID)
        {
            return base.Channel.GetMartiniCustomerDetails(DXSHCustomerID, DXSHAddressID);
        }

        public string GetLegacyPassword(string email)
        {
            return base.Channel.GetLegacyPassword(email);
        }

        public int CreateAddress(
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.BusinessID business,
                    Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.MyAccountCustomerService.ChannelID channel,
                    long webCustomerID,
                    string nickName,
                    string buildingNameNumber,
                    string subBuildingNumber,
                    string streetName,
                    string postalTown,
                    string postcode,
                    System.Nullable<int> buildingTypeID,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string legacyAddressString,
                    System.Nullable<bool> deliveryWithoutBags,
                    string deliveryInstructions,
                    System.Nullable<bool> isBillingAddress,
                    System.Nullable<bool> isHomeAddress,
                    System.Nullable<bool> isPAFValidated,
                    int addressID,
                    string locality,
                    string organisationName,
                    string gridRef,
                    bool legacyIsBusinessAddr,
                    bool isBlockedAddress)
        {
            return base.Channel.CreateAddress(business, channel, webCustomerID, nickName, buildingNameNumber, subBuildingNumber, streetName, postalTown, postcode, buildingTypeID, phoneDay, phoneEvening, phoneMobile, legacyAddressString, deliveryWithoutBags, deliveryInstructions, isBillingAddress, isHomeAddress, isPAFValidated, addressID, locality, organisationName, gridRef, legacyIsBusinessAddr, isBlockedAddress);
        }

        public void CreateCustomer(string clubcardNumber, string emailAddress, string Forename, string initials, bool isStaffMember, string surname, string title, string displayName, string clubcardPostcode, long webCustomerID, string password, System.Nullable<int> legacyCustomerID)
        {
            base.Channel.CreateCustomer(clubcardNumber, emailAddress, Forename, initials, isStaffMember, surname, title, displayName, clubcardPostcode, webCustomerID, password, legacyCustomerID);
        }

        public int CreateAddressInLegacy(
                    int legacyCustomerID,
                    string serviceNo,
                    int branchID,
                    string ULCode,
                    string postcode,
                    string addressLine1,
                    string addressLine2,
                    string addressLine3,
                    string addressLine4,
                    string addressLine5,
                    string phoneDay,
                    string phoneEvening,
                    string phoneMobile,
                    string homeIndicator,
                    string deliveryIndicator,
                    string favouriteIndicator,
                    string gridref,
                    string deliveryInstructions,
                    string addressNickName)
        {
            return base.Channel.CreateAddressInLegacy(legacyCustomerID, serviceNo, branchID, ULCode, postcode, addressLine1, addressLine2, addressLine3, addressLine4, addressLine5, phoneDay, phoneEvening, phoneMobile, homeIndicator, deliveryIndicator, favouriteIndicator, gridref, deliveryInstructions, addressNickName);
        }

        public void AddToPendingClubcardPoints(string temporaryClubcardNumber, long webCustomerID, string orderNumber, int clubcardPoints, int greenClubcardPoints)
        {
            base.Channel.AddToPendingClubcardPoints(temporaryClubcardNumber, webCustomerID, orderNumber, clubcardPoints, greenClubcardPoints);
        }
    }
}
