<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSbmtNumbersResource1" xml:space="preserve">
    <value>Elküld</value>
  </data>
  <data name="btnSbmtNumbersResource2" xml:space="preserve">
    <value>Elküld</value>
  </data>
  <data name="btnSubmitResource" xml:space="preserve">
    <value>Elküld</value>
  </data>
  <data name="CompareValidator1Resource1" xml:space="preserve">
    <value />
  </data>
  <data name="CompareValidator2Resource1" xml:space="preserve">
    <value />
  </data>
  <data name="CompareValidator3Resource1" xml:space="preserve">
    <value />
  </data>
  <data name="ErrorMaximumAttemp" xml:space="preserve">
    <value>Sajnos most ez volt az utolsó próbálkozási lehetőség a belépésre. Adatai biztonsága érdekében fiókját automatikusan zároltuk egy órára. Ezt követően tud újból próbálkozni. Amennyiben kérdése van fiókjával kapcsolatban, kérjük hívja a Clubcard ügyfélszolgálatot a 06-80-222-333, ingyenesen hívható telefonszámon.</value>
  </data>
  <data name="lclAnswer" xml:space="preserve">
    <value />
  </data>
  <data name="lclAnswer1" xml:space="preserve">
    <value>. számjegy</value>
  </data>
  <data name="lclClickHere" xml:space="preserve">
    <value />
  </data>
  <data name="lclCommunicateMsg1Resource1" xml:space="preserve">
    <value />
  </data>
  <data name="lclCommunicateMsg2Resource1" xml:space="preserve">
    <value />
  </data>
  <data name="lclErrorMsgHead" xml:space="preserve">
    <value>Az Ön által megadott adatok nem egyeznek a Clubcard fiókban szereplőkkel. Kérjük, próbálja újra.</value>
  </data>
  <data name="lclHeaderMsg" xml:space="preserve">
    <value>Kérjük, adja meg aktív Clubcard kártyáján szereplő 18 számjegye közül az alábbiakat:</value>
  </data>
  <data name="lclOrderReplacementLink" xml:space="preserve">
    <value />
  </data>
  <data name="lclPageHead" xml:space="preserve">
    <value>Clubcard Fiók Biztonsági Azonosítás</value>
  </data>
  <data name="lclPageHead1" xml:space="preserve">
    <value>Komolyan vesszük személyes adatainak védelmét, ezért fiókja biztonsága érdekében kártyáját többször is azonosítjuk.</value>
  </data>
  <data name="lclspnFooterMsg" xml:space="preserve">
    <value>Amennyiben kérdése van fiókjával kapcsolatban, kérjük, hívja a Clubcard ügyfélszolgálatot a 06-80-222-333, ingyenesen hívható telefonszámon.</value>
  </data>
  <data name="lclth" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1" xml:space="preserve">
    <value>Biztonsági sáv</value>
  </data>
  <data name="PageResource2" xml:space="preserve">
    <value>Biztonsági sáv</value>
  </data>
  <data name="RequiredFieldValidator3Resource1" xml:space="preserve">
    <value>Számjegy: </value>
  </data>
  <data name="RequiredFieldValidator4Resource1" xml:space="preserve">
    <value>Számjegy: </value>
  </data>
  <data name="RequiredFieldValidator5Resource1" xml:space="preserve">
    <value>Számjegy: </value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Biztonsági sáv</value>
  </data>
  <data name="lclOrderCard" xml:space="preserve">
    <value>Order Card</value>
  </data>
  <data name="lclOrderReplacementLinkV3_V2" xml:space="preserve">
    <value>If you only need to order a replacement card or key fobs, no need to complete the security verification. We have a separate page for you to do that on your own.</value>
  </data>
  <data name="lclOrderReplacementLinkV3_V2_Header" xml:space="preserve">
    <value>Order Replacement Card</value>
  </data>
</root>
