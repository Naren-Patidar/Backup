//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFuelBalanceRequest", Namespace="http://schemas.datacontract.org/2004/07/ClubcardOnlineService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GetFuelBalanceRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.AccountIDType AccountIdTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIDField, value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.AccountIDType AccountIdType {
            get {
                return this.AccountIdTypeField;
            }
            set {
                if ((this.AccountIdTypeField.Equals(value) != true)) {
                    this.AccountIdTypeField = value;
                    this.RaisePropertyChanged("AccountIdType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountIDType", Namespace="http://schemas.datacontract.org/2004/07/ClubcardOnlineService.DataContracts")]
    public enum AccountIDType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClubcardID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HouseholdID = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFuelBalanceResponse", Namespace="http://schemas.datacontract.org/2004/07/ClubcardOnlineService.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GetFuelBalanceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysLeftForFuelBalanceExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetBalanceResponse GetBalanceResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAccountExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysLeftForFuelBalanceExpiry {
            get {
                return this.DaysLeftForFuelBalanceExpiryField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysLeftForFuelBalanceExpiryField, value) != true)) {
                    this.DaysLeftForFuelBalanceExpiryField = value;
                    this.RaisePropertyChanged("DaysLeftForFuelBalanceExpiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetBalanceResponse GetBalanceResponse {
            get {
                return this.GetBalanceResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.GetBalanceResponseField, value) != true)) {
                    this.GetBalanceResponseField = value;
                    this.RaisePropertyChanged("GetBalanceResponse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccountExist {
            get {
                return this.IsAccountExistField;
            }
            set {
                if ((this.IsAccountExistField.Equals(value) != true)) {
                    this.IsAccountExistField = value;
                    this.RaisePropertyChanged("IsAccountExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBalanceResponse", Namespace="http://schemas.datacontract.org/2004/07/Tesco.StoredValue.Interfaces.Messages")]
    [System.SerializableAttribute()]
    public partial class GetBalanceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.Balance BalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.Balance Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceField, value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Balance", Namespace="http://schemas.datacontract.org/2004/07/Tesco.StoredValue.Interfaces.Messages")]
    [System.SerializableAttribute()]
    public partial class Balance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.BalanceByExpiry> BalanceByExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReservedBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalBalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.BalanceByExpiry> BalanceByExpiry {
            get {
                return this.BalanceByExpiryField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceByExpiryField, value) != true)) {
                    this.BalanceByExpiryField = value;
                    this.RaisePropertyChanged("BalanceByExpiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReservedBalance {
            get {
                return this.ReservedBalanceField;
            }
            set {
                if ((this.ReservedBalanceField.Equals(value) != true)) {
                    this.ReservedBalanceField = value;
                    this.RaisePropertyChanged("ReservedBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalBalance {
            get {
                return this.TotalBalanceField;
            }
            set {
                if ((this.TotalBalanceField.Equals(value) != true)) {
                    this.TotalBalanceField = value;
                    this.RaisePropertyChanged("TotalBalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BalanceByExpiry", Namespace="http://schemas.datacontract.org/2004/07/Tesco.StoredValue.Interfaces.Messages")]
    [System.SerializableAttribute()]
    public partial class BalanceByExpiry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Expiry {
            get {
                return this.ExpiryField;
            }
            set {
                if ((this.ExpiryField.Equals(value) != true)) {
                    this.ExpiryField = value;
                    this.RaisePropertyChanged("Expiry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tesco.com/clubcardonline/datacontract/2010/01", ConfigurationName="ClubcardService.IClubcardService")]
    public interface IClubcardService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddPrintAtH" +
            "omeDetailsXMLInput", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddPrintAtH" +
            "omeDetailsXMLInputResponse")]
        bool AddPrintAtHomeDetailsXMLInput(out string errorXml, string updateXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetFuelSave" +
            "rPointsBalance", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetFuelSave" +
            "rPointsBalanceResponse")]
        Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetFuelBalanceResponse GetFuelSaverPointsBalance(Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetFuelBalanceRequest objReq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IsXmasClubM" +
            "ember", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IsXmasClubM" +
            "emberResponse")]
        bool IsXmasClubMember(out string errorXml, out string resultXml, long CustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetChristma" +
            "sSaverSummary", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetChristma" +
            "sSaverSummaryResponse")]
        bool GetChristmasSaverSummary(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetMyAccoun" +
            "tDetails", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetMyAccoun" +
            "tDetailsResponse")]
        bool GetMyAccountDetails(out string errorXml, out string resultXml, long CustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IsNewOrderR" +
            "eplacementValid", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IsNewOrderR" +
            "eplacementValidResponse")]
        bool IsNewOrderReplacementValid(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddNewOrder" +
            "Replacement", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddNewOrder" +
            "ReplacementResponse")]
        bool AddNewOrderReplacement(out string errorXml, out long customerID, string updateXml, string consumer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetHousehol" +
            "dCustomers", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetHousehol" +
            "dCustomersResponse")]
        bool GetHouseholdCustomers(out string errorXml, out string resultXml, long CustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetClubcard" +
            "s", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetClubcard" +
            "sResponse")]
        bool GetClubcards(out string errorXml, out string resultXml, long CustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetClubcard" +
            "sCustomer", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetClubcard" +
            "sCustomerResponse")]
        bool GetClubcardsCustomer(out string errorXml, out string resultXml, long CustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetPointsFo" +
            "rAllCollPeriodByCustomer", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetPointsFo" +
            "rAllCollPeriodByCustomerResponse")]
        bool GetPointsForAllCollPeriodByCustomer(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetTxnDetai" +
            "lsByCustomerAndOfferID", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetTxnDetai" +
            "lsByCustomerAndOfferIDResponse")]
        bool GetTxnDetailsByCustomerAndOfferID(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetTxnDetai" +
            "lsByHouseholdCustomerAndOfferID", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetTxnDetai" +
            "lsByHouseholdCustomerAndOfferIDResponse")]
        bool GetTxnDetailsByHouseholdCustomerAndOfferID(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetPointsSu" +
            "mmaryInfo", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetPointsSu" +
            "mmaryInfoResponse")]
        bool GetPointsSummaryInfo(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/CheckCustom" +
            "erActivated", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/CheckCustom" +
            "erActivatedResponse")]
        bool CheckCustomerActivated(out char activated, out long customerID, out string errorXml, out string resultXml, long dotcomCustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IGHSCheckCu" +
            "stomerActivated", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/IGHSCheckCu" +
            "stomerActivatedResponse")]
        bool IGHSCheckCustomerActivated(out char activated, out long customerID, out string errorXml, out string resultXml, string dotcomCustomerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/CheckHouseh" +
            "oldStatusOfCustomer", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/CheckHouseh" +
            "oldStatusOfCustomerResponse")]
        bool CheckHouseholdStatusOfCustomer(out string errorXml, out string resultXml, long customerID, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddPrimaryC" +
            "ard", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddPrimaryC" +
            "ardResponse")]
        bool AddPrimaryCard(out long objectId, out string resultXml, out string errorXml, string addCardXml, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCusto" +
            "merStatus", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCusto" +
            "merStatusResponse")]
        bool UpdateCustomerStatus(out string errorXml, string insertXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/RollBackCus" +
            "tomerDetails", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/RollBackCus" +
            "tomerDetailsResponse")]
        string RollBackCustomerDetails(out string errorXml, string insertXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ValidateTok" +
            "enCustomer", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ValidateTok" +
            "enCustomerResponse")]
        bool ValidateTokenCustomer(out string resultXml, string tokenId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewCardRan" +
            "ge", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewCardRan" +
            "geResponse")]
        bool ViewCardRange(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCardR" +
            "ange", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCardR" +
            "angeResponse")]
        bool UpdateCardRange(string conditionXml, int userID, long objectID, string resultXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewCardTyp" +
            "e", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewCardTyp" +
            "eResponse")]
        bool ViewCardType(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddCardRang" +
            "e", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddCardRang" +
            "eResponse")]
        bool AddCardRange(string conditionXml, int userID, long objectID, string resultXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/DeleteCardR" +
            "ange", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/DeleteCardR" +
            "angeResponse")]
        bool DeleteCardRange(string conditionXml, int userID, long objectID, string resultXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddCardType" +
            "", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddCardType" +
            "Response")]
        bool AddCardType(out string resultXml, string conditionXml, int userID, long objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCardT" +
            "ype", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateCardT" +
            "ypeResponse")]
        bool UpdateCardType(out string resultXml, string conditionXml, int userID, long objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStores", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStoresR" +
            "esponse")]
        bool ViewStores(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStoreRe" +
            "gion", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStoreRe" +
            "gionResponse")]
        bool ViewStoreRegion(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStoreFo" +
            "rmat", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/ViewStoreFo" +
            "rmatResponse")]
        bool ViewStoreFormat(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddStores", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/AddStoresRe" +
            "sponse")]
        bool AddStores(out string resultXml, string conditionXml, int userID, long objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateStore" +
            "s", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/UpdateStore" +
            "sResponse")]
        bool UpdateStores(out string resultXml, string conditionXml, int userID, long objectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetStoreNam" +
            "es", ReplyAction="http://tesco.com/clubcardonline/datacontract/2010/01/IClubcardService/GetStoreNam" +
            "esResponse")]
        bool GetStoreNames(out string errorXml, out string resultXml, string storeNumbers, string culture);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClubcardServiceChannel : Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.IClubcardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClubcardServiceClient : System.ServiceModel.ClientBase<Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.IClubcardService>, Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.IClubcardService {
        
        public ClubcardServiceClient() {
        }
        
        public ClubcardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClubcardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClubcardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClubcardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddPrintAtHomeDetailsXMLInput(out string errorXml, string updateXml) {
            return base.Channel.AddPrintAtHomeDetailsXMLInput(out errorXml, updateXml);
        }
        
        public Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetFuelBalanceResponse GetFuelSaverPointsBalance(Tesco.ClubcardProducts.MCA.Web.ServiceAdapter.ClubcardService.GetFuelBalanceRequest objReq) {
            return base.Channel.GetFuelSaverPointsBalance(objReq);
        }
        
        public bool IsXmasClubMember(out string errorXml, out string resultXml, long CustomerID, string culture) {
            return base.Channel.IsXmasClubMember(out errorXml, out resultXml, CustomerID, culture);
        }
        
        public bool GetChristmasSaverSummary(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.GetChristmasSaverSummary(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool GetMyAccountDetails(out string errorXml, out string resultXml, long CustomerID, string culture) {
            return base.Channel.GetMyAccountDetails(out errorXml, out resultXml, CustomerID, culture);
        }
        
        public bool IsNewOrderReplacementValid(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.IsNewOrderReplacementValid(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool AddNewOrderReplacement(out string errorXml, out long customerID, string updateXml, string consumer) {
            return base.Channel.AddNewOrderReplacement(out errorXml, out customerID, updateXml, consumer);
        }
        
        public bool GetHouseholdCustomers(out string errorXml, out string resultXml, long CustomerID, string culture) {
            return base.Channel.GetHouseholdCustomers(out errorXml, out resultXml, CustomerID, culture);
        }
        
        public bool GetClubcards(out string errorXml, out string resultXml, long CustomerID, string culture) {
            return base.Channel.GetClubcards(out errorXml, out resultXml, CustomerID, culture);
        }
        
        public bool GetClubcardsCustomer(out string errorXml, out string resultXml, long CustomerID, string culture) {
            return base.Channel.GetClubcardsCustomer(out errorXml, out resultXml, CustomerID, culture);
        }
        
        public bool GetPointsForAllCollPeriodByCustomer(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.GetPointsForAllCollPeriodByCustomer(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool GetTxnDetailsByCustomerAndOfferID(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.GetTxnDetailsByCustomerAndOfferID(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool GetTxnDetailsByHouseholdCustomerAndOfferID(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.GetTxnDetailsByHouseholdCustomerAndOfferID(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool GetPointsSummaryInfo(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.GetPointsSummaryInfo(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool CheckCustomerActivated(out char activated, out long customerID, out string errorXml, out string resultXml, long dotcomCustomerID, string culture) {
            return base.Channel.CheckCustomerActivated(out activated, out customerID, out errorXml, out resultXml, dotcomCustomerID, culture);
        }
        
        public bool IGHSCheckCustomerActivated(out char activated, out long customerID, out string errorXml, out string resultXml, string dotcomCustomerID, string culture) {
            return base.Channel.IGHSCheckCustomerActivated(out activated, out customerID, out errorXml, out resultXml, dotcomCustomerID, culture);
        }
        
        public bool CheckHouseholdStatusOfCustomer(out string errorXml, out string resultXml, long customerID, string culture) {
            return base.Channel.CheckHouseholdStatusOfCustomer(out errorXml, out resultXml, customerID, culture);
        }
        
        public bool AddPrimaryCard(out long objectId, out string resultXml, out string errorXml, string addCardXml, int userID) {
            return base.Channel.AddPrimaryCard(out objectId, out resultXml, out errorXml, addCardXml, userID);
        }
        
        public bool UpdateCustomerStatus(out string errorXml, string insertXml) {
            return base.Channel.UpdateCustomerStatus(out errorXml, insertXml);
        }
        
        public string RollBackCustomerDetails(out string errorXml, string insertXml) {
            return base.Channel.RollBackCustomerDetails(out errorXml, insertXml);
        }
        
        public bool ValidateTokenCustomer(out string resultXml, string tokenId) {
            return base.Channel.ValidateTokenCustomer(out resultXml, tokenId);
        }
        
        public bool ViewCardRange(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount) {
            return base.Channel.ViewCardRange(out errorXml, out resultXml, conditionXml, maxRowCount, culture, rowCount);
        }
        
        public bool UpdateCardRange(string conditionXml, int userID, long objectID, string resultXml) {
            return base.Channel.UpdateCardRange(conditionXml, userID, objectID, resultXml);
        }
        
        public bool ViewCardType(out string errorXml, out string resultXml, out int rowCount, string conditionXml, int maxRowCount, string culture) {
            return base.Channel.ViewCardType(out errorXml, out resultXml, out rowCount, conditionXml, maxRowCount, culture);
        }
        
        public bool AddCardRange(string conditionXml, int userID, long objectID, string resultXml) {
            return base.Channel.AddCardRange(conditionXml, userID, objectID, resultXml);
        }
        
        public bool DeleteCardRange(string conditionXml, int userID, long objectID, string resultXml) {
            return base.Channel.DeleteCardRange(conditionXml, userID, objectID, resultXml);
        }
        
        public bool AddCardType(out string resultXml, string conditionXml, int userID, long objectID) {
            return base.Channel.AddCardType(out resultXml, conditionXml, userID, objectID);
        }
        
        public bool UpdateCardType(out string resultXml, string conditionXml, int userID, long objectID) {
            return base.Channel.UpdateCardType(out resultXml, conditionXml, userID, objectID);
        }
        
        public bool ViewStores(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount) {
            return base.Channel.ViewStores(out errorXml, out resultXml, conditionXml, maxRowCount, culture, rowCount);
        }
        
        public bool ViewStoreRegion(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount) {
            return base.Channel.ViewStoreRegion(out errorXml, out resultXml, conditionXml, maxRowCount, culture, rowCount);
        }
        
        public bool ViewStoreFormat(out string errorXml, out string resultXml, string conditionXml, int maxRowCount, string culture, int rowCount) {
            return base.Channel.ViewStoreFormat(out errorXml, out resultXml, conditionXml, maxRowCount, culture, rowCount);
        }
        
        public bool AddStores(out string resultXml, string conditionXml, int userID, long objectID) {
            return base.Channel.AddStores(out resultXml, conditionXml, userID, objectID);
        }
        
        public bool UpdateStores(out string resultXml, string conditionXml, int userID, long objectID) {
            return base.Channel.UpdateStores(out resultXml, conditionXml, userID, objectID);
        }
        
        public bool GetStoreNames(out string errorXml, out string resultXml, string storeNumbers, string culture) {
            return base.Channel.GetStoreNames(out errorXml, out resultXml, storeNumbers, culture);
        }
    }
}
