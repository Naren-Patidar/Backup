<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblExchangeTokensResource1.Text" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lblExchangeTokensResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblTxt1Resource1.Text" xml:space="preserve">
    <value>Now printing...</value>
  </data>
  <data name="lblTxt1Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblTxt2Resource1.Text" xml:space="preserve">
    <value>Clubcard Vouchers</value>
  </data>
  <data name="lblTxt2Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value />
  </data>
  <data name="VoucherText1" xml:space="preserve">
    <value>Clubcard Voucher</value>
  </data>
  <data name="VoucherText2" xml:space="preserve">
    <value>Printed at Touchscreen Kiosk</value>
  </data>
  <data name="VoucherText3" xml:space="preserve">
    <value>Use: In store. Online. Tesco fuel. Tesco Direct,</value>
  </data>
  <data name="VoucherText4" xml:space="preserve">
    <value>Clubcard rewards</value>
  </data>
  <data name="VoucherText5" xml:space="preserve">
    <value>Online code: </value>
  </data>
  <data name="VoucherText6" xml:space="preserve">
    <value>Valid Until : </value>
  </data>
  <data name="VoucherText7" xml:space="preserve">
    <value>Clubcard vouchers can be used once at face value, in store, on Tesco fuel, at the Tesco direct desk, online at tesco.com/groceries or tesco.com/direct or for selected Tesco Bank products only.  Alternatively, Clubcard vouchers can be exchanged for Clubcard Boost at Tesco tokens or for Clubcard Boost tokens for use with one of our partners outside of Tesco.  See tesco.com/clubcard/boost/terms for more information. Terms and conditions apply, please contact the Clubcard helpline on 0800 59 16 88 or visit tesco.com/clubcard for further details.</value>
  </data>
  <data name="VoucherText8" xml:space="preserve">
    <value>Vouchers are the property of Tesco Stores Limited and have no cash value.  They are not for resale/ publication and valid in the UK and IOM only.  Defaced/copied vouchers will not be accepted.  Valid for use only by the recipient, age restrictions apply. Excludes tobacco, Esso fuels, lottery, bureau de change, prescriptions, E-top up, infant formula milk, clothing and entertainment websites and the Tesco Outlet eBay shop.</value>
  </data>
  <data name="imgCrumbHeader.ImageUrl" xml:space="preserve">
    <value>~/Images/crumb4.png</value>
  </data>
  <data name="LogoImagePath" xml:space="preserve">
    <value>Templates\\TescoLogo.jpg</value>
  </data>
  <data name="imgTescoClubcardLogoResource1.AlternateText" xml:space="preserve">
    <value>img Tesco Clubcard Logo</value>
  </data>
  <data name="imgTescoClubcardLogoResource1.ImageUrl" xml:space="preserve">
    <value>~/Images/TescoClubcardLogo.gif</value>
  </data>
  <data name="lblScanYourClubcardHeaderTextResource.Text" xml:space="preserve">
    <value>Print out your Clubcard vouchers and coupons</value>
  </data>
</root>