//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tesco.Framework.UITesting.Services.LocatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsAddressBlockedEntity", Namespace="http://schemas.datacontract.org/2004/07/Tesco.Com.Framework.Services.Locator.Enti" +
        "ties")]
    [System.SerializableAttribute()]
    public partial class IsAddressBlockedEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string buildingNameNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isBusinessAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string organisationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postalTownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subBuildingNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string buildingNameNumber {
            get {
                return this.buildingNameNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.buildingNameNumberField, value) != true)) {
                    this.buildingNameNumberField = value;
                    this.RaisePropertyChanged("buildingNameNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isBusinessAddress {
            get {
                return this.isBusinessAddressField;
            }
            set {
                if ((this.isBusinessAddressField.Equals(value) != true)) {
                    this.isBusinessAddressField = value;
                    this.RaisePropertyChanged("isBusinessAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string locality {
            get {
                return this.localityField;
            }
            set {
                if ((object.ReferenceEquals(this.localityField, value) != true)) {
                    this.localityField = value;
                    this.RaisePropertyChanged("locality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string organisationName {
            get {
                return this.organisationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.organisationNameField, value) != true)) {
                    this.organisationNameField = value;
                    this.RaisePropertyChanged("organisationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postCode {
            get {
                return this.postCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.postCodeField, value) != true)) {
                    this.postCodeField = value;
                    this.RaisePropertyChanged("postCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postalTown {
            get {
                return this.postalTownField;
            }
            set {
                if ((object.ReferenceEquals(this.postalTownField, value) != true)) {
                    this.postalTownField = value;
                    this.RaisePropertyChanged("postalTown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string streetName {
            get {
                return this.streetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.streetNameField, value) != true)) {
                    this.streetNameField = value;
                    this.RaisePropertyChanged("streetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subBuildingNumber {
            get {
                return this.subBuildingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.subBuildingNumberField, value) != true)) {
                    this.subBuildingNumberField = value;
                    this.RaisePropertyChanged("subBuildingNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocatorService.ILocatorSvcSDA", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface ILocatorSvcSDA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/FindAddressesByPostcode", ReplyAction="http://tempuri.org/ILocatorSvcSDA/FindAddressesByPostcodeResponse")]
        string FindAddressesByPostcode(string applicationId, string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAddressesByPostCode", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAddressesByPostCodeResponse")]
        string GetAddressesByPostCode(string postcode, string houseNameNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAddressListForPostcode", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAddressListForPostcodeResponse")]
        string GetAddressListForPostcode(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAreaDetails", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAreaDetailsResponse")]
        string GetAreaDetails(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetGridRefByPostCode", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetGridRefByPostCodeResponse")]
        string GetGridRefByPostCode(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAddressExceptions", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAddressExceptionsResponse")]
        string GetAddressExceptions(string postcode, string houseNumber, string houseName, string streetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAddressForLocation", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAddressForLocationResponse")]
        string GetAddressForLocation(string postcode, string county, string addressLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetAddressesByPostCodeHouseNumber", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetAddressesByPostCodeHouseNumberResponse")]
        string GetAddressesByPostCodeHouseNumber(Tesco.Framework.UITesting.Services.LocatorService.IsAddressBlockedEntity[] isAddressBlocked);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/GetGeoCoordinateByPostCode", ReplyAction="http://tempuri.org/ILocatorSvcSDA/GetGeoCoordinateByPostCodeResponse")]
        string GetGeoCoordinateByPostCode(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocatorSvcSDA/FindAddressLite", ReplyAction="http://tempuri.org/ILocatorSvcSDA/FindAddressLiteResponse")]
        string FindAddressLite(string postcode, string county, string addressLine);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocatorSvcSDAChannel : Tesco.Framework.UITesting.Services.LocatorService.ILocatorSvcSDA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocatorSvcSDAClient : System.ServiceModel.ClientBase<Tesco.Framework.UITesting.Services.LocatorService.ILocatorSvcSDA>, Tesco.Framework.UITesting.Services.LocatorService.ILocatorSvcSDA {
        
        public LocatorSvcSDAClient() {
        }
        
        public LocatorSvcSDAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocatorSvcSDAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatorSvcSDAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocatorSvcSDAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string FindAddressesByPostcode(string applicationId, string postcode) {
            return base.Channel.FindAddressesByPostcode(applicationId, postcode);
        }
        
        public string GetAddressesByPostCode(string postcode, string houseNameNumber) {
            return base.Channel.GetAddressesByPostCode(postcode, houseNameNumber);
        }
        
        public string GetAddressListForPostcode(string postcode) {
            return base.Channel.GetAddressListForPostcode(postcode);
        }
        
        public string GetAreaDetails(string postcode) {
            return base.Channel.GetAreaDetails(postcode);
        }
        
        public string GetGridRefByPostCode(string postcode) {
            return base.Channel.GetGridRefByPostCode(postcode);
        }
        
        public string GetAddressExceptions(string postcode, string houseNumber, string houseName, string streetName) {
            return base.Channel.GetAddressExceptions(postcode, houseNumber, houseName, streetName);
        }
        
        public string GetAddressForLocation(string postcode, string county, string addressLine) {
            return base.Channel.GetAddressForLocation(postcode, county, addressLine);
        }
        
        public string GetAddressesByPostCodeHouseNumber(Tesco.Framework.UITesting.Services.LocatorService.IsAddressBlockedEntity[] isAddressBlocked) {
            return base.Channel.GetAddressesByPostCodeHouseNumber(isAddressBlocked);
        }
        
        public string GetGeoCoordinateByPostCode(string postcode) {
            return base.Channel.GetGeoCoordinateByPostCode(postcode);
        }
        
        public string FindAddressLite(string postcode, string county, string addressLine) {
            return base.Channel.FindAddressLite(postcode, county, addressLine);
        }
    }
}
