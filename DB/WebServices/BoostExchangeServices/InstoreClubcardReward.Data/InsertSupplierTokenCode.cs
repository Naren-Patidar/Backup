
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//
//     Date:    4/28/2009
//     Time:    7:42 
//     Version: 5.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlTypes;
using System.Data.SqlClient;

namespace InstoreClubcardReward.Data
{
    #region usp_InsertSupplierTokenCode Wrapper
    /// <summary>
    /// This class is a wrapper for the usp_InsertSupplierTokenCode stored procedure.
    /// </summary>
    public class InsertSupplierTokenCode
    {
        #region Member Variables
        protected string _connectionString = String.Empty;
        protected SqlConnection _connection = null;
        protected SqlTransaction _transaction = null;
        protected bool _ownsConnection = true;
        protected int _recordsAffected = -1;
        protected int _returnValue = 0;
        protected SqlString _supplierCode = SqlString.Null;
        protected bool _supplierCodeSet = false;
        protected SqlString _supplierTokenId = SqlString.Null;
        protected bool _supplierTokenIdSet = false;
        protected SqlString _supplierTokenCode = SqlString.Null;
        protected bool _supplierTokenCodeSet = false;
        protected SqlDateTime _supplyDate = SqlDateTime.Null;
        protected bool _supplyDateSet = false;
        protected SqlDateTime _customerDate = SqlDateTime.Null;
        protected bool _customerDateSet = false;
        protected SqlInt32 _tokenId = SqlInt32.Null;
        protected bool _tokenIdSet = false;
        protected SqlDateTime _endDate = SqlDateTime.Null;
        protected bool _endDateSet = false;
        protected SqlString _status = SqlString.Null;
        protected bool _statusSet = false;
        protected SqlInt32 _id = SqlInt32.Null;
        protected bool _idSet = false;
        #endregion

        #region Constructors
        public InsertSupplierTokenCode()
        {
        }

        public InsertSupplierTokenCode(string connectionString)
        {
            this.ConnectionString = connectionString;
        }

        public InsertSupplierTokenCode(SqlConnection connection)
        {
            this.Connection = connection;
        }

        public InsertSupplierTokenCode(SqlConnection connection, SqlTransaction transaction)
        {
            this.Connection = connection;
            this.Transaction = transaction;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// The connection string to use when executing the usp_InsertSupplierTokenCode stored procedure.
        /// </summary>
        public string ConnectionString
        {
            get { return _connectionString; }
            set { _connectionString = value; }
        }

        /// <summary>
        /// The connection to use when executing the usp_InsertSupplierTokenCode stored procedure.
        /// If this is not null, it will be used instead of creating a new connection.
        /// </summary>
        public SqlConnection Connection
        {
            get { return _connection; }
            set { _connection = value; }
        }

        /// <summary>
        /// The transaction to use when executing the usp_InsertSupplierTokenCode stored procedure.
        /// If this is not null, the stored procedure will be executing within the transaction.
        /// </summary>
        public SqlTransaction Transaction
        {
            get { return _transaction; }
            set { _transaction = value; }
        }

        /// <summary>
        /// Gets the return value from the usp_InsertSupplierTokenCode stored procedure.
        /// </summary>
        public int ReturnValue
        {
            get { return _returnValue; }
        }

        /// <summary>
        /// Gets the number of rows changed, inserted, or deleted by execution of the usp_InsertSupplierTokenCode stored procedure.
        /// </summary>
        public int RecordsAffected
        {
            get { return _recordsAffected; }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString SupplierCode
        {
            get { return _supplierCode; }
            set
            {
                _supplierCode = value;
                _supplierCodeSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString SupplierTokenId
        {
            get { return _supplierTokenId; }
            set
            {
                _supplierTokenId = value;
                _supplierTokenIdSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString SupplierTokenCode
        {
            get { return _supplierTokenCode; }
            set
            {
                _supplierTokenCode = value;
                _supplierTokenCodeSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlDateTime SupplyDate
        {
            get { return _supplyDate; }
            set
            {
                _supplyDate = value;
                _supplyDateSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlDateTime CustomerDate
        {
            get { return _customerDate; }
            set
            {
                _customerDate = value;
                _customerDateSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlInt32 TokenId
        {
            get { return _tokenId; }
            set
            {
                _tokenId = value;
                _tokenIdSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlDateTime EndDate
        {
            get { return _endDate; }
            set
            {
                _endDate = value;
                _endDateSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlString Status
        {
            get { return _status; }
            set
            {
                _status = value;
                _statusSet = true;
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public SqlInt32 Id
        {
            get { return _id; }
            set
            {
                _id = value;
                _idSet = true;
            }
        }
        #endregion

        #region Helper Methods
        private SqlConnection GetConnection()
        {
            if (this.Connection != null)
            {
                _ownsConnection = false;
                return this.Connection;
            }
            else
            {
                System.Diagnostics.Debug.Assert(this.ConnectionString.Length != 0, "You must first set the ConnectioString property before calling an Execute method.");
                return new SqlConnection(this.ConnectionString);
            }
        }
        #endregion

        #region Execute Methods
        /// <summary>
        /// This method calls the usp_InsertSupplierTokenCode stored procedure.
        /// </summary>
        public virtual void Execute()
        {
            SqlCommand cmd = new SqlCommand();

            SqlConnection cn = this.GetConnection();

            try
            {
                cmd.Connection = cn;
                cmd.Transaction = this.Transaction;
                cmd.CommandText = "[dbo].[usp_InsertSupplierTokenCode]";
                cmd.CommandType = CommandType.StoredProcedure;

                #region Populate Parameters
                SqlParameter prmReturnValue = cmd.Parameters.Add("@RETURN_VALUE", SqlDbType.Int);
                prmReturnValue.Direction = ParameterDirection.ReturnValue;

                SqlParameter prmSupplierCode = cmd.Parameters.Add("@SupplierCode", SqlDbType.VarChar);
                prmSupplierCode.Direction = ParameterDirection.Input;
                prmSupplierCode.Size = 15;
                if (_supplierCodeSet == true || this.SupplierCode.IsNull == false)
                {
                    prmSupplierCode.Value = this.SupplierCode;
                }

                SqlParameter prmSupplierTokenId = cmd.Parameters.Add("@SupplierTokenId", SqlDbType.VarChar);
                prmSupplierTokenId.Direction = ParameterDirection.Input;
                prmSupplierTokenId.Size = 22;
                if (_supplierTokenIdSet == true || this.SupplierTokenId.IsNull == false)
                {
                    prmSupplierTokenId.Value = this.SupplierTokenId;
                }

                SqlParameter prmSupplierTokenCode = cmd.Parameters.Add("@SupplierTokenCode", SqlDbType.VarChar);
                prmSupplierTokenCode.Direction = ParameterDirection.Input;
                prmSupplierTokenCode.Size = 22;
                if (_supplierTokenCodeSet == true || this.SupplierTokenCode.IsNull == false)
                {
                    prmSupplierTokenCode.Value = this.SupplierTokenCode;
                }

                SqlParameter prmSupplyDate = cmd.Parameters.Add("@SupplyDate", SqlDbType.DateTime);
                prmSupplyDate.Direction = ParameterDirection.Input;
                if (_supplyDateSet == true || this.SupplyDate.IsNull == false)
                {
                    prmSupplyDate.Value = this.SupplyDate;
                }

                SqlParameter prmCustomerDate = cmd.Parameters.Add("@CustomerDate", SqlDbType.DateTime);
                prmCustomerDate.Direction = ParameterDirection.Input;
                if (_customerDateSet == true || this.CustomerDate.IsNull == false)
                {
                    prmCustomerDate.Value = this.CustomerDate;
                }

                SqlParameter prmTokenId = cmd.Parameters.Add("@TokenId", SqlDbType.Int);
                prmTokenId.Direction = ParameterDirection.Input;
                if (_tokenIdSet == true || this.TokenId.IsNull == false)
                {
                    prmTokenId.Value = this.TokenId;
                }

                SqlParameter prmEndDate = cmd.Parameters.Add("@EndDate", SqlDbType.DateTime);
                prmEndDate.Direction = ParameterDirection.Input;
                if (_endDateSet == true || this.EndDate.IsNull == false)
                {
                    prmEndDate.Value = this.EndDate;
                }

                SqlParameter prmStatus = cmd.Parameters.Add("@Status", SqlDbType.Char);
                prmStatus.Direction = ParameterDirection.Input;
                prmStatus.Size = 1;
                if (_statusSet == true || this.Status.IsNull == false)
                {
                    prmStatus.Value = this.Status;
                }

                SqlParameter prmId = cmd.Parameters.Add("@Id", SqlDbType.Int);
                if (_idSet == true)
                {
                    prmId.Direction = ParameterDirection.InputOutput;
                }
                else
                {
                    prmId.Direction = ParameterDirection.Output;
                }
                if (_idSet == true || this.Id.IsNull == false)
                {
                    prmId.Value = this.Id;
                }
                #endregion

                #region Execute Command
                if (cn.State != ConnectionState.Open) cn.Open();
                _recordsAffected = cmd.ExecuteNonQuery();
                #endregion

                #region Get Output Parameters
                if (prmReturnValue.Value != null && prmReturnValue.Value != DBNull.Value)
                {
                    _returnValue = (int)prmReturnValue.Value;
                }

                if (prmId != null && prmId.Value != null)
                {
                    if (prmId.Value is SqlInt32)
                    {
                        this.Id = (SqlInt32)prmId.Value;
                    }
                    else
                    {
                        if (prmId.Value != DBNull.Value)
                        {
                            this.Id = new SqlInt32((int)prmId.Value);
                        }
                        else
                        {
                            this.Id = SqlInt32.Null;
                        }
                    }
                }
                else
                {
                    this.Id = SqlInt32.Null;
                }
                #endregion
            }
            finally
            {
                if (_ownsConnection)
                {
                    if (cn.State == ConnectionState.Open)
                    {
                        cn.Close();
                    }

                    cn.Dispose();
                }
                cmd.Dispose();
            }
        }

        /// <summary>
        /// This method calls the usp_InsertSupplierTokenCode stored procedure.
        /// </summary>
        /// <param name="connectionString">The connection string to use</param>
        /// <param name="supplierCode"></param>
        /// <param name="supplierTokenId"></param>
        /// <param name="supplierTokenCode"></param>
        /// <param name="supplyDate"></param>
        /// <param name="customerDate"></param>
        /// <param name="tokenId"></param>
        /// <param name="endDate"></param>
        /// <param name="status"></param>
        /// <param name="id"></param>
        public static void Execute(
        #region Parameters
string connectionString,
                SqlString supplierCode,
                SqlString supplierTokenId,
                SqlString supplierTokenCode,
                SqlDateTime supplyDate,
                SqlDateTime customerDate,
                SqlInt32 tokenId,
                SqlDateTime endDate,
                SqlString status,
                ref SqlInt32 id
        #endregion
)
        {
            InsertSupplierTokenCode insertSupplierTokenCode = new InsertSupplierTokenCode();

            #region Assign Property Values
            insertSupplierTokenCode.ConnectionString = connectionString;
            insertSupplierTokenCode.SupplierCode = supplierCode;
            insertSupplierTokenCode.SupplierTokenId = supplierTokenId;
            insertSupplierTokenCode.SupplierTokenCode = supplierTokenCode;
            insertSupplierTokenCode.SupplyDate = supplyDate;
            insertSupplierTokenCode.CustomerDate = customerDate;
            insertSupplierTokenCode.TokenId = tokenId;
            insertSupplierTokenCode.EndDate = endDate;
            insertSupplierTokenCode.Status = status;
            insertSupplierTokenCode.Id = id;
            #endregion

            insertSupplierTokenCode.Execute();

            #region Get Property Values
            id = insertSupplierTokenCode.Id;
            #endregion
        }
        #endregion
    }
    #endregion
}

