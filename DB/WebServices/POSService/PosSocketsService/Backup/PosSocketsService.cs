using System;
using Fujitsu.eCrm.Generic.CrmService;

namespace Fujitsu.eCrm.Seoul.PosSocketsService {

	#region Header
	///
	/// <department>Fujitsu, e-Innovations, eCRM</department>
	/// <copyright>(c) Fujitsu Consulting, 2002</copyright>
	/// 
	/// <summary>
	/// Provides a service that responds to PosGet/PosSet requests.
	/// A clone of the Kofi POSSocketsService project, but using Tesco
	/// format sockets.
	/// </summary>
	/// 
	/// <development>
	///		<version number="1.00" day="05" month="11" year="2002">
	///			<developer>Richard Snowden</developer>
	///			<checker>Stephen Lang</checker>
	///			<work_packet>Seoul/011</work_packet>
	///			<description>Initial Implementation</description>
	///		</version>
	///		<version number="1.01" day="21" month="11" year="2002">
	///			<developer>Richard Snowden</developer>
	///			<checker>Tom Bedwell</checker>
	///			<work_packet>Seoul/021</work_packet>
	///			<description>Replace existing single port implementation with 
	///			read of port information from database and creation of a 
	///			listener for each intoduction port and transaction port</description>
	///		</version>
	///		<version number="1.02" day="14" month="01" year="2003">
	///			<developer>Mark Hart</developer>
	///			<checker>Stephen Lang</checker>
	///			<work_packet>WP/Barcelona/045</work_packet>
	///			<description>Added call to XmlApplication.Close in OnStop. Amended
	///			call to XmlApplication.Intialise in OnStart.</description>
	///		</version>
	/// </development>
	#endregion Header	
	public class PosSocketsService : System.ServiceProcess.ServiceBase {
		
		#region Attributes
		/// <summary>
		/// Identifies the log to be used for events generated by this application
		/// Only used for information, errors go to the Application log
		/// </summary>
		public System.Diagnostics.EventLog PosSocketsEventLog;
		/// <summary>Required designer variable.</summary>
		private System.ComponentModel.Container components = null;
		#endregion

		#region Required for Windows Service
		/// <summary>
		/// This call is required by the Windows.Forms Component Designer.
		/// </summary>
		public PosSocketsService() {
			 
			InitializeComponent();

		}

		// The main entry point for the process
		static void Main() {
			System.ServiceProcess.ServiceBase[] ServicesToRun;

			// More than one user Service may run within the same process. To add
			// another service to this process, change the following line to
			// create a second service object. For example,
			//
			//   ServicesToRun = New System.ServiceProcess.ServiceBase[] {new Service1(), new MySecondUserService()};
			//
			ServicesToRun = new System.ServiceProcess.ServiceBase[] { new PosSocketsService() };

			System.ServiceProcess.ServiceBase.Run(ServicesToRun);
		}

		/// <summary> 
		/// Required method for Designer support - do not modify 
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent() {
			this.PosSocketsEventLog = new System.Diagnostics.EventLog();
			((System.ComponentModel.ISupportInitialize)(this.PosSocketsEventLog)).BeginInit();
			// 
			// PosSocketsEventLog
			// 
			this.PosSocketsEventLog.Log = "NGCPOSServiceLog";
			this.PosSocketsEventLog.Source = "NGC POS Service";
			// 
			// PosSocketsService
			// 
			this.ServiceName = "NGCPOSService";
			((System.ComponentModel.ISupportInitialize)(this.PosSocketsEventLog)).EndInit();

		}

		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		protected override void Dispose( bool disposing ) {
			if( disposing ) {
				if (components != null) {
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}
		#endregion

		#region Event Methods
		/// <summary>
		/// Set things in motion so your service can do its work.
		/// </summary>
		protected override void OnStart(string[] args) {
			PosSocketsEventLog.WriteEntry("Starting NGC POS Server");
			PosApplication.OnStart(PosSocketsEventLog);
		}
		
		/// <summary>
		/// Actions when service is stopped
		/// </summary>
		protected override void OnStop() {
			PosSocketsEventLog.WriteEntry("Closing NGC POS Server");
			XmlApplication.Close();
		}
		#endregion

	}
}