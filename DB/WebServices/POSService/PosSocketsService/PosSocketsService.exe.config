<configuration>

  <configSections>
    <!-- see http://msdn.microsoft.com/library -->
    <!--<section name="exceptionManagement" type="Microsoft.ApplicationBlocks.ExceptionManagement.ExceptionManagerSectionHandler, Microsoft.ApplicationBlocks.ExceptionManagement" />-->
    <!--Enter prise Library 4.0-->
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="false"
     defaultCategory="Default Category" logWarningsWhenNoCategoriesMatch="false">
    <listeners>
      <add source="NGC Error Logging" formatter="Default Formatter"
        log="" machineName="." listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        traceOutputOptions="None" filter="Error" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Event Log Destination" />
      <add fileName="C:\Trace\trace.log" header="----------------------------------------"
        footer="----------------------------------------" formatter="Text Formatter"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        traceOutputOptions="DateTime" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="FlatFile TraceListener" />
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp}&#xD;&#xA;          Message: {message}&#xD;&#xA;          Category: {category}&#xD;&#xA;          Priority: {priority}&#xD;&#xA;          EventId: {eventid}&#xD;&#xA;          Severity: {severity}&#xD;&#xA;          Title:{title}&#xD;&#xA;          Machine: {machine}&#xD;&#xA;          Application Domain: {appDomain}&#xD;&#xA;          Process Id: {processId}&#xD;&#xA;          Process Name: {processName}&#xD;&#xA;          Win32 Thread Id: {win32ThreadId}&#xD;&#xA;          Thread Name: {threadName}&#xD;&#xA;          Extended Properties: {dictionary({key} - {value})}"
        type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Default Formatter" />
      <add template="Timestamp: {timestamp}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;&#xA;Priority: {priority}&#xD;&#xA;EventId: {eventid}&#xD;&#xA;Severity: {severity}&#xD;&#xA;Title:{title}&#xD;&#xA;Machine: {machine}&#xD;&#xA;Application Domain: {appDomain}&#xD;&#xA;Process Id: {processId}&#xD;&#xA;Process Name: {processName}&#xD;&#xA;Win32 Thread Id: {win32ThreadId}&#xD;&#xA;Thread Name: {threadName}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}&#xD;&#xA;)}"
        type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Text Formatter" />
    </formatters>
    <logFilters>
      <add categoryFilterMode="AllowAllExceptDenied" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Category" />
      <add minimumPriority="0" maximumPriority="2147483647" type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Priority" />
    </logFilters>
    <categorySources>
      <add switchValue="All" name="Default Category">
        <listeners>
          <add name="Event Log Destination" />
        </listeners>
      </add>
      <add switchValue="All" name="General">
        <listeners>
          <add name="FlatFile TraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="Event Log Destination" />
          <add name="FlatFile TraceListener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="FlatFile TraceListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Log Only Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="Default Category" eventId="100" severity="Error"
                title="Exception Management Application Exception" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <!--<exceptionManagement mode="on">
    --><!-- publisher mode="on/off" assembly="AssemblyName" type="TypeName" exclude="(+)Type,(+)Type" include="(+)Type,(+)Type" exceptionFormat="xml" customattr="value" / --><!--
    <publisher
			mode="on"
			assembly="SharedUtils"
			type="Fujitsu.eCrm.Generic.SharedUtils.PublishFilter"
			excludeWhere="User,*,*" />
  </exceptionManagement>-->

  <appSettings>
    <!-- IF A NEW KEY'S VALUE IS GENERAL TO ALL SERVERS THEN IT SHOULD BE PLACED IN ADMIN DB'S admin_configuration TABLE -->
    <!-- ONLY KEY'S (1) WHOSE VALUE CAN BE DIFFERENT ON DIFFERENT SERVERS, OR (2) DETAILING CONNECTION TO ADMIN DB SHOULD BE PLACED HERE  -->

    <!--	Specifying the type of database containing the meta data, possible values: SqlServer -->
    <add key="AdminDatabaseType" value="SqlServer" />

    <!--	Frequency (millisecs) for checking inactive connections 60000ms = 1min -->
    <add key="ConnectionCheckInterval" value="60000" />

    <!--	Max milliseconds to wait for locking server's resources 1000ms = 1sec -->
    <add key="WaitInterval" value="1000" />

    <!--	The directory to which the CRM Server writes its log
			files -->
    <add key="traceDirectory" value="c:\Trace\PosSocketsService" />

    <!--	Location of messages -->
    <add key="LocalizationDirectory" value="C:\Inetpub\wwwroot\Localization" />
    <!--	The Default Culture used when generating messages, identifies sub-directory to search -->
    <add key="CultureDefault" value="" />

    <!--	The level of detailed to be logged -->
    <add key="traceLevel" value="ERROR" />

    <!--    Retry time if SQL Server is not available at service start :
  				If the SQL Server database is not started when the POS Service 
				first requires access to it then it will wait and try again after 
				a specified time determined by the RetryConnectionTime. It will 
				then repeat this process for ever until a connection is eventually 
				made or the service is stopped by a specific request.
				Value is in seconds and default is 60 if value not set.
		-->
    <add key="RetryConnectionTime" value="300" />
    <!-- Changes made to implement the new database model-->
    <add key="POSTimeout" value="30000" />
    <add key="POSRetryVoucherRedeemTime" value="1000" />
    <add key="POSFutureTime" value="2" />
    <add key="POSInformConversionTxnThreshold" value="5" />
    <add key="POSRefreshFrequency" value="600000" />
    <!-- End of changes-->
    <!--	The user account used for auditing creation of customers.
				If the user name is not valid then the auditting will be
				switched off -->
    <add key="PosAuditUser" value="ngcAdmin" />

    <!--	The DLL used to process POS requests, select on the
				basis of the interface between the NGC POS Server and
				the Store POS Server -->
    <add key="PosHandlerDll" value="BangkokPosHandler" />

    <!--	The maximum number of pending connection waiting for
				acceptance on any port -->
    <add key="PosListenerBacklogSize" value="10" />
    <!-- Set the default Data Protection Preference-->
    <add key="DefaultDataProtectionPreference" value="0"/>

  </appSettings>
</configuration>